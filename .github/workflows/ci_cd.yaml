name: Flutter CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Install Firebase CLI
      uses: actions/setup-node@v3
      with:
        node-version: '20'  # Use an appropriate Node.js version

    - name: Install Firebase CLI
      run: npm install -g firebase-tools

    - name: Firebase Init
      run: firebase init
      env:
        FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

    - name: Firebase Use
      run: firebase use --add "$FIREBASE_PROJECT_ALIAS"
      env:
        FIREBASE_PROJECT_ALIAS: pictorama-797df

    - name: Authenticate with Firebase
      run: |
         echo "$FIREBASE_SERVICE_ACCOUNT" > service-account.json 
         firebase use --add "$FIREBASE_PROJECT_ALIAS" --token "$FIREBASE_TOKEN"
      env:
        FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        FIREBASE_PROJECT_ALIAS: pictorama-797df
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.9' # Replace with your Flutter version

    - name: Install dependencies
      run: flutter pub get
    
    - name: Set environment variables
      run: echo "ENV_SECRET_INFO=$ENV_SECRET_INFO" > .env

    - name: Build APK
      run: flutter build apk
      env:
        ENV_SECRET_INFO: ${{ secrets.ENV_SECRET_INFO }}

    - name: Deploy to Firebase App Distribution
      uses: wzieba/Firebase-Distribution-Github-Action@v1
      with:
        appId: ${{ secrets.FIREBASE_APP_ID }}        
        serviceCredentialsFileContent: ${{ secrets.FIREBASE_TOKEN }}
        groups: internal
        file: build/app/outputs/flutter-apk/app-release.apk